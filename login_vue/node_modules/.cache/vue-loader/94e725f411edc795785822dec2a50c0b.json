{"remainingRequest":"/Users/leonhjn/Desktop/vue project/login_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/leonhjn/Desktop/vue project/login_vue/src/components/changePassword.vue?vue&type=style&index=0&id=00b926fb&scoped=true&lang=css&","dependencies":[{"path":"/Users/leonhjn/Desktop/vue project/login_vue/src/components/changePassword.vue","mtime":1603359970111},{"path":"/Users/leonhjn/Desktop/vue project/login_vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leonhjn/Desktop/vue project/login_vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/leonhjn/Desktop/vue project/login_vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/leonhjn/Desktop/vue project/login_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leonhjn/Desktop/vue project/login_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5DaGFuZ2VwYXNzd29yZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2JjZGVmMzsKICBoZWlnaHQ6IDEwMHZoOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQouZm9ybSB7CiAgd2lkdGg6IDQwJTsKICBtYXJnaW4tYm90dG9tOiAyMHZoOwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBwYWRkaW5nOiA1JSAzJTsKfQouaXRlbSB7CiAgd2lkdGg6IDc1JTsKfQo="},{"version":3,"sources":["changePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"changePassword.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"Changepassword\">\n    <el-form class=\"form\" :rules=\"rules\" :model=\"form\" ref=\"form\">\n      <h3>Change password</h3>\n        <el-form-item label=\"Original Password\" prop=\"password\">\n            <el-input type=\"password\" placeholder=\"Please enter the original password\" v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"New Password\" prop=\"newPassword\">\n            <el-input type=\"password\" placeholder=\"Please enter the new password\" v-model=\"form.newPassword\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Confirm Password\" prop=\"newPassword2\">\n            <el-input type=\"password\" placeholder=\"Please confirm the new password\" v-model=\"form.newPassword2\"></el-input>\n        </el-form-item>\n        <el-form-item>\n            <el-button type=\"primary\" @click=\"onSubmit('form')\">Save</el-button>\n            <el-button @click=\"$refs['form'].resetFields()\">Reset</el-button>\n        </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    let validateNewPassword = (rule, value, callback) => {\n            if (value === this.form.password) {\n                callback(new Error('The new password cannot be the same as the old one!'))\n            } else {\n                callback()\n            }\n        }\n    let validateNewPassword2 = (rule, value, callback) => {\n            if (value !== this.form.newPassword) {\n                callback(new Error('Not the same as the new password!'))\n            } else {\n                callback()\n            }\n    }\n    return {\n        form: {},\n        rules: {\n            password: [\n                { required: true, message: 'Please enter the original password', trigger: 'blur' }\n            ],\n            newPassword: [\n                { required: true, message: 'Please enter the new password', trigger: 'blur' },\n                { validator: validateNewPassword, trigger: 'blur' }\n            ],\n            newPassword2: [\n                { required: true, message: 'Please confirm the new password', trigger: 'blur' },\n                { validator: validateNewPassword2, trigger: 'blur' }\n            ]\n            }\n        }\n    },\n  methods: {\n    onSubmit() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          axios.get(\"api/user/login\",{\n                      params: this.form\n                    }\n                      )\n          .then(res => {\n            if(res.status == 404){\n              alert('Internel Error')\n              console.log('Response:')\n              console.log(res)\n            }\n            else if (res.status == 200){\n              alert('Login Success!')\n              console.log('Response:')\n              console.log(res)\n            }\n          }) // API post\n          this.$router.push(\"/acc\");\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.Changepassword {\n  background-color: #bcdef3;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.form {\n  width: 40%;\n  margin-bottom: 20vh;\n  background-color: white;\n  border-radius: 2px;\n  padding: 5% 3%;\n}\n.item {\n  width: 75%;\n}\n</style>"]}]}