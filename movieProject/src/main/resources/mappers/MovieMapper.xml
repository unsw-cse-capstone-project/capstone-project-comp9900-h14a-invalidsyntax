<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.movieProject.mapper.MovieMapper">
    <resultMap id="BaseResultMap" type="com.movieProject.entity.Movie">
        <id column="movie_id" jdbcType="INTEGER" property="movie_id" />
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="release_time" jdbcType="VARCHAR" property="release_time"/>
        <result column="poster" jdbcType="VARCHAR" property="poster"/>
        <result column="rate" jdbcType="FLOAT" property="rate"/>
        <result column="homepage" jdbcType="VARCHAR" property="homepage"/>
        <result column="overview" jdbcType="VARCHAR" property="overview"/>
        <result column="rate_number" jdbcType="VARCHAR" property="rate_number"/>

        <collection property="actors" ofType="com.movieProject.entity.Actor">
            <id column="actor_id" jdbcType="INTEGER" property="actor_id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="gender" jdbcType="VARCHAR" property="gender"/>
        </collection>

        <collection property="genres" ofType="com.movieProject.entity.Genre">
            <id column="type_id" jdbcType="INTEGER" property="type_id"/>
            <result column="type" jdbcType="VARCHAR" property="type"/>
        </collection>
    </resultMap>

    <select id="findMovieByTitle" resultMap="BaseResultMap">
        SELECT *
        FROM movie
        <where>
            <if test="title != null and title != ''">
                and title like concat('%', #{title}, '%')
            </if>
        </where>
    </select>



    <select id="findMovieByID" resultMap="BaseResultMap">
        SELECT *
        FROM movie
        WHERE movie_id = #{movie_id}
    </select>

    <select id="findRateByUser" resultType="java.lang.Float">
        SELECT rate
        FROM review r, user_review ur, movie_review mr
        WHERE ur.user_id = #{user_id} AND ur.review_id = r.review_id
            AND ur.review_id = mr.review_id AND mr.movie_id = #{movie_id}
    </select>

    <select id="listMovie" resultType="com.movieProject.entity.Movie">
        SELECT *
        FROM movie
        ORDER BY rate DESC LIMIT 5
    </select>
    <select id="findMovieDirector" resultType="com.movieProject.entity.Actor">
        SELECT actor.actor_id, actor.name, actor.gender
        FROM movie_director md, actor
        WHERE md.movie_id = #{movie_id} and md.director_id = actor.actor_id
    </select>

    <select id="findMovieGenre" resultType="com.movieProject.entity.Genre">
        SELECT type.type_id, type.type
        FROM movie_type mt, type
        WHERE mt.movie_id = #{movie_id} AND type.type_id = mt.type_id
    </select>

    <select id="findMovieActor" resultType="com.movieProject.entity.Actor">
        SELECT actor.actor_id, actor.name, actor.gender
        FROM movie_actor ma, actor
        WHERE ma.movie_id = #{movie_id} and ma.actor_id = actor.actor_id
    </select>

    <update id="updateMovieRate" parameterType="com.movieProject.entity.Movie">
        UPDATE movie
        SET title = #{title}, poster = #{poster}, rate = #{rate}, rate_number = #{rate_number},
            release_time = #{release_time}, homepage = #{homepage}, overview = #{overview}
        WHERE movie_id = #{movie_id}
    </update>

    <select id="findMovieGenreUserReview" resultType="java.lang.Integer">
        SELECT distinct mt.type_id
        FROM user_review ur, movie_review mr, movie_type mt
        WHERE ur.user_id = #{user_id} and ur.review_id = mr.review_id and mr.movie_id = mt.movie_id
    </select>

    <select id="findGenreMovieReviewed" resultType="java.lang.Integer">
        select DISTINCT movie_type.movie_id
        FROM	user_review
        LEFT JOIN movie_review ON user_review.review_id = movie_review.review_id
        LEFT JOIN movie_type ON movie_review.movie_id = movie_type.movie_id
        WHERE user_id = #{user_id} AND type_id = #{type_id}
    </select>

    <select id="findMovieByGenre" resultType="java.lang.Integer">
        SELECT movie_id
        FROM movie_type
        WHERE type_id = #{type_id}
    </select>

</mapper>